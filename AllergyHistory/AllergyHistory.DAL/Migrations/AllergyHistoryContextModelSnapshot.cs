// <auto-generated />
using System;
using AllergyHistory.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AllergyHistory.DAL.Migrations
{
    [DbContext(typeof(AllergyHistoryContext))]
    partial class AllergyHistoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AllergyHistory.Domain.Entities.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Allergen");

                    b.Property<string>("AxisI");

                    b.Property<int>("CISId");

                    b.Property<string>("ClientAllergyId");

                    b.Property<DateTime>("DOB");

                    b.Property<string>("Gender");

                    b.Property<string>("PatientName");

                    b.Property<string>("Population");

                    b.Property<string>("Provider");

                    b.Property<bool>("deleted");

                    b.HasKey("PatientId");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            PatientId = 1,
                            Allergen = "",
                            AxisI = "",
                            CISId = 3,
                            ClientAllergyId = "",
                            DOB = new DateTime(2019, 3, 6, 15, 33, 53, 206, DateTimeKind.Local).AddTicks(997),
                            Gender = "Male",
                            PatientName = "something",
                            Population = "Child",
                            Provider = "something",
                            deleted = false
                        },
                        new
                        {
                            PatientId = 2,
                            Allergen = "",
                            AxisI = "something",
                            CISId = 4,
                            ClientAllergyId = "",
                            DOB = new DateTime(2019, 3, 6, 15, 33, 53, 206, DateTimeKind.Local).AddTicks(8173),
                            Gender = "Female",
                            PatientName = "",
                            Population = "Child",
                            Provider = "something",
                            deleted = false
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
